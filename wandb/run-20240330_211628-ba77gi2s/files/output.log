
wandb: WARNING Calling wandb.login() after wandb.init() has no effect.
03/30/2024 21:17:10 - WARNING - __main__ -   Process rank: 0, device: cuda:0, n_gpu: 1distributed training: True, 16-bits training: False
03/30/2024 21:17:10 - INFO - __main__ -   Training/evaluation parameters CoCondenserPreTrainingArguments(
_n_gpu=1,
accelerator_config={'split_batches': False, 'dispatch_batches': None, 'even_batches': True, 'use_seedable_sampler': True},
adafactor=False,
adam_beta1=0.9,
adam_beta2=0.999,
adam_epsilon=1e-08,
auto_find_batch_size=False,
bf16=False,
bf16_full_eval=False,
cache_chunk_size=-1,
data_seed=None,
dataloader_drop_last=True,
dataloader_num_workers=4,
dataloader_persistent_workers=False,
dataloader_pin_memory=True,
dataloader_prefetch_factor=None,
ddp_backend=None,
ddp_broadcast_buffers=None,
ddp_bucket_cap_mb=None,
ddp_find_unused_parameters=None,
ddp_timeout=1800,
debug=[],
deepspeed=None,
disable_tqdm=False,
dispatch_batches=None,
do_eval=False,
do_predict=False,
do_train=True,
eval_accumulation_steps=None,
eval_delay=0,
eval_steps=5000.0,
evaluation_strategy=no,
fp16=False,
fp16_backend=auto,
fp16_full_eval=False,
fp16_opt_level=O1,
fsdp=[],
fsdp_config={'min_num_params': 0, 'xla': False, 'xla_fsdp_v2': False, 'xla_fsdp_grad_ckpt': False},
fsdp_min_num_params=0,
fsdp_transformer_layer_cls_to_wrap=None,
full_determinism=False,
gradient_accumulation_steps=1,
gradient_checkpointing=False,
gradient_checkpointing_kwargs=None,
greater_is_better=None,
group_by_length=False,
half_precision_backend=auto,
hub_always_push=False,
hub_model_id=None,
hub_private_repo=False,
hub_strategy=every_save,
hub_token=<HUB_TOKEN>,
ignore_data_skip=False,
include_inputs_for_metrics=False,
include_num_input_tokens_seen=False,
include_tokens_per_second=False,
jit_mode_eval=False,
label_names=None,
label_smoothing_factor=0.0,
learning_rate=0.0001,
length_column_name=length,
load_best_model_at_end=False,
local_rank=0,
log_level=passive,
log_level_replica=warning,
log_on_each_node=True,
logging_dir=co_condenser_pretrain/runs/Mar30_21-16-37_gpu-1,
logging_first_step=False,
logging_nan_inf_filter=True,
logging_steps=1.0,
logging_strategy=steps,
lr_scheduler_kwargs={},
lr_scheduler_type=linear,
max_grad_norm=1.0,
max_steps=-1,
metric_for_best_model=None,
mp_parameters=,
neftune_noise_alpha=None,
no_cuda=False,
num_train_epochs=8.0,
optim=adamw_torch,
optim_args=None,
optim_target_modules=None,
output_dir=co_condenser_pretrain,
overwrite_output_dir=True,
past_index=-1,
per_device_eval_batch_size=8,
per_device_train_batch_size=16,
prediction_loss_only=False,
push_to_hub=False,
push_to_hub_model_id=None,
push_to_hub_organization=None,
push_to_hub_token=<PUSH_TO_HUB_TOKEN>,
ray_scope=last,
remove_unused_columns=False,
report_to=['wandb'],
resume_from_checkpoint=None,
run_name=co_condenser_pretrain,
save_on_each_node=False,
save_only_model=False,
save_safetensors=True,
save_steps=20000,
save_strategy=steps,
save_total_limit=None,
seed=42,
skip_memory_metrics=True,
split_batches=None,
tf32=None,
torch_compile=False,
torch_compile_backend=None,
torch_compile_mode=None,
torchdynamo=None,
tpu_metrics_debug=False,
tpu_num_cores=None,
use_cpu=False,
use_ipex=False,
use_legacy_prediction_loop=False,
use_mps_device=False,
warmup_ratio=0.1,
warmup_steps=0,
weight_decay=0.01,
)
[INFO|configuration_utils.py:724] 2024-03-30 21:17:10,619 >> loading configuration file /home/ubuntu/ejpark/checkpoint-260000/config.json
[INFO|configuration_utils.py:789] 2024-03-30 21:17:10,620 >> Model config BertConfig {
  "_name_or_path": "/home/ubuntu/ejpark/checkpoint-260000/",
  "architectures": [
    "BertForMaskedLM"
  ],
  "attention_probs_dropout_prob": 0.1,
  "classifier_dropout": null,
  "gradient_checkpointing": false,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "model_type": "bert",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 0,
  "position_embedding_type": "absolute",
  "torch_dtype": "float32",
  "transformers_version": "4.39.1",
  "type_vocab_size": 2,
  "use_cache": true,
  "vocab_size": 61790
}
[INFO|tokenization_utils_base.py:2082] 2024-03-30 21:17:10,622 >> loading file vocab.txt
[INFO|tokenization_utils_base.py:2082] 2024-03-30 21:17:10,622 >> loading file added_tokens.json
[INFO|tokenization_utils_base.py:2082] 2024-03-30 21:17:10,622 >> loading file special_tokens_map.json
[INFO|tokenization_utils_base.py:2082] 2024-03-30 21:17:10,622 >> loading file tokenizer_config.json
[INFO|tokenization_utils_base.py:2082] 2024-03-30 21:17:10,622 >> loading file tokenizer.json
[INFO|modeling_utils.py:3280] 2024-03-30 21:17:10,699 >> loading weights file /home/ubuntu/ejpark/checkpoint-260000/model.safetensors
[INFO|configuration_utils.py:928] 2024-03-30 21:17:10,708 >> Generate config GenerationConfig {
  "pad_token_id": 0
}
[INFO|modeling_utils.py:4024] 2024-03-30 21:17:11,337 >> All model checkpoint weights were used when initializing BertForMaskedLM.
[INFO|modeling_utils.py:4032] 2024-03-30 21:17:11,338 >> All the weights of BertForMaskedLM were initialized from the model checkpoint at /home/ubuntu/ejpark/checkpoint-260000/.
If your task is similar to the task the model of the checkpoint was trained on, you can already use BertForMaskedLM for predictions without further training.
[INFO|configuration_utils.py:881] 2024-03-30 21:17:11,340 >> loading configuration file /home/ubuntu/ejpark/checkpoint-260000/generation_config.json
[INFO|configuration_utils.py:928] 2024-03-30 21:17:11,341 >> Generate config GenerationConfig {
  "pad_token_id": 0
}
03/30/2024 21:17:11 - INFO - modeling -   loading extra weights from local files
-------------------------------------------
loading json . . .
03/30/2024 21:25:16 - INFO - trainer -   Initializing Gradient Cache Trainer
/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/accelerate/accelerator.py:432: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead:
dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)
  warnings.warn(
/home/ubuntu/ejpark/new_index_diet__.json load complete! 484.3721926212311 seconds took.
[INFO|trainer.py:1969] 2024-03-30 21:27:13,339 >> ***** Running training *****
[INFO|trainer.py:1970] 2024-03-30 21:27:13,340 >>   Num examples = 7,204
[INFO|trainer.py:1971] 2024-03-30 21:27:13,340 >>   Num Epochs = 8
[INFO|trainer.py:1972] 2024-03-30 21:27:13,340 >>   Instantaneous batch size per device = 16
[INFO|trainer.py:1975] 2024-03-30 21:27:13,340 >>   Total train batch size (w. parallel, distributed & accumulation) = 32
[INFO|trainer.py:1976] 2024-03-30 21:27:13,340 >>   Gradient Accumulation steps = 1
[INFO|trainer.py:1977] 2024-03-30 21:27:13,340 >>   Total optimization steps = 1,800
[INFO|trainer.py:1978] 2024-03-30 21:27:13,341 >>   Number of trainable parameters = 147,735,134
[INFO|integration_utils.py:723] 2024-03-30 21:27:13,342 >> Automatic Weights & Biases logging enabled, to disable set os.environ["WANDB_DISABLED"] = "true"
  0%|          | 0/1800 [00:00<?, ?it/s]/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/transformers/modeling_utils.py:977: FutureWarning: The `device` argument is deprecated and will be removed in v5 of Transformers.
  warnings.warn(
/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/torch/autograd/__init__.py:251: UserWarning: Error detected in LogSoftmaxBackward0. Traceback of forward call that caused the error:
  File "/home/ubuntu/ejpark/Condenser/run_co_pre_training.py", line 221, in <module>
    main()
  File "/home/ubuntu/ejpark/Condenser/run_co_pre_training.py", line 211, in main
    trainer.train()
  File "/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/transformers/trainer.py", line 1780, in train
    return inner_training_loop(
  File "/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/transformers/trainer.py", line 2118, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
  File "/home/ubuntu/ejpark/Condenser/trainer.py", line 138, in training_step
    return super(CoCondenserPretrainer, self).training_step(model, inputs)
  File "/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/transformers/trainer.py", line 3036, in training_step
    loss = self.compute_loss(model, inputs)
  File "/home/ubuntu/ejpark/Condenser/trainer.py", line 129, in compute_loss
    return model(inputs, labels, grad_cache=grad_cache, chunk_offset=chunk_offset)
  File "/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1519, in forward
    else self._run_ddp_forward(*inputs, **kwargs)
  File "/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1355, in _run_ddp_forward
    return self.module(*inputs, **kwargs)  # type: ignore[index]
  File "/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ubuntu/ejpark/Condenser/modeling.py", line 250, in forward
    co_loss = self.compute_contrastive_loss(co_cls_hiddens)
  File "/home/ubuntu/ejpark/Condenser/modeling.py", line 280, in compute_contrastive_loss
    co_loss = F.cross_entropy(similarities, self.co_target) * self._world_size()
  File "/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/torch/nn/functional.py", line 3053, in cross_entropy
    return torch._C._nn.cross_entropy_loss(input, target, weight, _Reduction.get_enum(reduction), ignore_index, label_smoothing)
 (Triggered internally at ../torch/csrc/autograd/python_anomaly_mode.cpp:114.)
  Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
hidden state: tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',
       grad_fn=<CatBackward0>)
similarities: tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',
       grad_fn=<MmBackward0>)
co_target (batch_loss): tensor([ 1,  0,  3,  2,  5,  4,  7,  6,  9,  8, 11, 10, 13, 12, 15, 14, 17, 16,
        19, 18, 21, 20, 23, 22, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 35, 34,
        37, 36, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 49, 48, 51, 50, 53, 52,
        55, 54, 57, 56, 59, 58, 61, 60, 63, 62], device='cuda:0')
loss: nan, co: nan
Traceback (most recent call last):
  File "/home/ubuntu/ejpark/Condenser/run_co_pre_training.py", line 221, in <module>
    main()
  File "/home/ubuntu/ejpark/Condenser/run_co_pre_training.py", line 211, in main
    trainer.train()
  File "/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/transformers/trainer.py", line 1780, in train
    return inner_training_loop(
  File "/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/transformers/trainer.py", line 2118, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
  File "/home/ubuntu/ejpark/Condenser/trainer.py", line 138, in training_step
    return super(CoCondenserPretrainer, self).training_step(model, inputs)
  File "/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/transformers/trainer.py", line 3045, in training_step
    self.accelerator.backward(loss)
  File "/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/accelerate/accelerator.py", line 2001, in backward
    loss.backward(**kwargs)
  File "/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/torch/_tensor.py", line 492, in backward
    torch.autograd.backward(
  File "/home/ubuntu/ejpark/con_venv/lib/python3.9/site-packages/torch/autograd/__init__.py", line 251, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
RuntimeError: Function 'LogSoftmaxBackward0' returned nan values in its 0th output.